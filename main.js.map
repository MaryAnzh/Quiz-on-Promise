{"version":3,"file":"main.js","mappings":"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","sources":["webpack://free-task/./src/service/localStorage.ts","webpack://free-task/./src/model/todo-item/todo-item.ts","webpack://free-task/./src/model/todo-list/todo-list.ts","webpack://free-task/./src/data/lists-data.ts","webpack://free-task/./src/index.ts"],"sourcesContent":["import { IItemData } from '../data/data-item-intarface';\r\nimport { ILocalStorgeKey } from '../data/localstorge-key-interface';\r\n\r\nclass LocalStorageService {\r\n    public keys: string[] = ['toDo', 'Done'];\r\n\r\n    constructor() { }\r\n\r\n    setData(key: string, value: IItemData[]): void {\r\n        if (value) {\r\n            localStorage.setItem(\r\n                key, JSON.stringify(value)\r\n            );\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n\r\n    getData(key: string): IItemData[] | null {\r\n        const data = localStorage.getItem(key);\r\n        return data\r\n            ? JSON.parse(data) :\r\n            null;\r\n    }\r\n\r\n    getAllKeys(): ILocalStorgeKey[] {\r\n        return this.keys.map(key => {\r\n            const listInfo: ILocalStorgeKey = {\r\n                name: key,\r\n                data: this.getData(key),\r\n            }\r\n            return listInfo;\r\n        });\r\n    }\r\n}\r\n\r\nexport { LocalStorageService }\r\n    ;","import { LocalStorageService } from '../../service/localStorage';\r\nimport { IItemData } from '../../data/data-item-intarface';\r\nimport { ILocalStorgeKey } from '../../data/localstorge-key-interface';\r\n\r\nclass TodoItem {\r\n    public item: HTMLLIElement;\r\n    public itemData: IItemData;\r\n    public onClick: (e: Event) => void;\r\n    public updatePerent: Function;\r\n\r\n    private _localStorge = new LocalStorageService();\r\n\r\n    constructor(data: IItemData, updatePerentList: Function) {\r\n        this.item = document.createElement('li');\r\n        this.itemData = data;\r\n        this.item.textContent = this.itemData.content;\r\n        this.onClick = (e) => this.changeItemsPerentOnCkick(e);\r\n        this.updatePerent = updatePerentList;\r\n\r\n        this.item.addEventListener('click', this.onClick);\r\n    }\r\n\r\n    changeItemsPerentOnCkick(e: Event) {\r\n        this.destroy();\r\n        this.updatePerent(this.itemData);\r\n    }\r\n\r\n    destroy() {\r\n        this.item.removeEventListener('click', this.onClick);\r\n        this.item.remove();\r\n    }\r\n}\r\n\r\nexport { TodoItem }","import { LocalStorageService } from '../../service/localStorage';\r\nimport { TodoItem } from '../todo-item/todo-item';\r\nimport { IItemData } from '../../data/data-item-intarface';\r\n\r\nclass TodoList {\r\n    public wrapper: HTMLDivElement;\r\n    public title: HTMLHeadingElement;\r\n    public list: HTMLUListElement;\r\n\r\n    public listName: string;\r\n\r\n    public todoData: IItemData[];\r\n    public updateItemsInMain: Function;\r\n\r\n    public localStorage = new LocalStorageService();\r\n\r\n    constructor(perentNode: HTMLElement, listName: string, updateItemsBind: Function) {\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.classList.add('list-wrap');\r\n        this.listName = listName;\r\n        this.title = document.createElement('h3');\r\n        this.title.textContent = listName;\r\n        this.list = document.createElement('ul');\r\n        this.list.classList.add('list-wrap__list');\r\n        this.wrapper.append(this.title, this.list);\r\n        perentNode.append(this.wrapper);\r\n\r\n        this.todoData = this.localStorage.getData(listName);\r\n        this.updateItemsInMain = updateItemsBind;\r\n\r\n        this.createtodoList();\r\n    }\r\n\r\n    createtodoList(): void {\r\n        if (this.todoData) {\r\n            this.todoData.forEach((elData) => {\r\n                const itemComponent = new TodoItem(elData, this.updateListInfoInPerent.bind(this));\r\n                this.list.append(itemComponent.item);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    addItemInList(data: IItemData): void {\r\n        const itemData: IItemData = {\r\n            content: data.content,\r\n            id: data.id,\r\n            perentList: this.listName,\r\n        }\r\n        const itemComponent = new TodoItem(itemData, this.updateListInfoInPerent.bind(this));\r\n        this.list.append(itemComponent.item);\r\n    }\r\n\r\n    updateListInfoInPerent(itemData: IItemData) {\r\n        console.log(`Строка ${itemData.content} удалена из списка`);\r\n        this.updateItemsInMain(itemData);\r\n    }\r\n}\r\n\r\nexport { TodoList }","import { IItemData } from './data-item-intarface';\r\n\r\nconst toDo: IItemData[] = [\r\n    {\r\n        content: 'shopping',\r\n        id: 0,\r\n        perentList: 'toDo',\r\n    },\r\n    {\r\n        content: 'visit to petsvet',\r\n        id: 1,\r\n        perentList: 'toDo',\r\n    },\r\n    {\r\n        content: 'visit to the doctor',\r\n        id: 2,\r\n        perentList: 'toDo',\r\n    },\r\n];\r\n\r\nconst done: IItemData[] = [\r\n    {\r\n        content: 'going to the cinema',\r\n        id: 3,\r\n        perentList: 'Done',\r\n    },\r\n    {\r\n        content: 'omething else',\r\n        id: 4,\r\n        perentList: 'Done'\r\n    }\r\n];\r\n\r\nexport { toDo, done };","\"use strict\";\r\n\r\nimport './assets/style/style.scss';\r\nimport { TodoList } from './model/todo-list/todo-list';\r\nimport { toDo, done } from './data/lists-data';\r\nimport { LocalStorageService } from './service/localStorage';\r\nimport { IItemData } from './data/data-item-intarface';\r\nimport { ILocalStorgeKey } from './data/localstorge-key-interface';\r\n\r\nconst addDatatoLocalStorge = () => {\r\n    const localStorge = new LocalStorageService();\r\n    const toDoTitle = 'toDo';\r\n    const doneTitle = 'Done';\r\n    localStorge.setData(toDoTitle, toDo);\r\n    localStorge.setData(doneTitle, done);\r\n}\r\naddDatatoLocalStorge();\r\n\r\nclass PageModel {\r\n    public toDoTitle = 'toDo';\r\n    public doneTitle = 'Done';\r\n    public toDoList: TodoList;\r\n    public doneList: TodoList;\r\n\r\n    public body: HTMLElement;\r\n    public main: HTMLElement;\r\n    public wrapper: HTMLElement;\r\n\r\n    private _localStorge = new LocalStorageService();\r\n\r\n    constructor() {\r\n        this.body = document.querySelector('body');\r\n        this.main = document.createElement('main');\r\n        this.main.classList.add('page');\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.classList.add('wrapper');\r\n        this.body.append(this.wrapper);\r\n        this.wrapper.append(this.main);\r\n\r\n        this.toDoList = new TodoList(this.main, this.toDoTitle, this.updateItemsInList.bind(this));\r\n        this.doneList = new TodoList(this.main, this.doneTitle, this.updateItemsInList.bind(this));\r\n    }\r\n\r\n    updateItemsInList(itemData: IItemData) {\r\n        console.log(`Обновить ${itemData.perentList}, строку ${itemData.content}`);\r\n        const currentperentList = itemData.perentList;\r\n        const curretDataList = this._localStorge.getData(itemData.perentList);\r\n        const updateDataRemoveItem = curretDataList.filter(el => el.id !== itemData.id);\r\n        this._localStorge.setData(itemData.perentList, updateDataRemoveItem);\r\n        if (currentperentList == \"toDo\") {\r\n            itemData.perentList = 'Done';\r\n            const updateDataAddItem = this._localStorge.getData('Done');\r\n            updateDataAddItem.push(itemData);\r\n            this._localStorge.setData('Done', updateDataAddItem);\r\n            this.doneList.addItemInList(itemData);\r\n\r\n        }\r\n        if (currentperentList === 'Done') {\r\n            itemData.perentList = 'toDo';\r\n            const updateDataAddItem = this._localStorge.getData('toDo');\r\n            updateDataAddItem.push(itemData);\r\n            this._localStorge.setData('toDo', updateDataAddItem);\r\n            this.toDoList.addItemInList(itemData);\r\n        }\r\n        console.log(this._localStorge.getAllKeys())\r\n    }\r\n}\r\n\r\nconst page = () => new PageModel();\r\n\r\nwindow.addEventListener('load', page);"],"names":["LocalStorageService","constructor","keys","setData","key","value","localStorage","setItem","JSON","stringify","removeItem","getData","data","getItem","parse","getAllKeys","this","map","name","TodoItem","updatePerentList","_localStorge","item","document","createElement","itemData","textContent","content","onClick","e","changeItemsPerentOnCkick","updatePerent","addEventListener","destroy","removeEventListener","remove","TodoList","perentNode","listName","updateItemsBind","wrapper","classList","add","title","list","append","todoData","updateItemsInMain","createtodoList","forEach","elData","itemComponent","updateListInfoInPerent","bind","addItemInList","id","perentList","console","log","toDo","done","localStorge","addDatatoLocalStorge","PageModel","toDoTitle","doneTitle","body","querySelector","main","toDoList","updateItemsInList","doneList","currentperentList","updateDataRemoveItem","filter","el","updateDataAddItem","push","window"],"sourceRoot":""}