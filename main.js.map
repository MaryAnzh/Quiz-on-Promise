{"version":3,"file":"main.js","mappings":"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","sources":["webpack://free-task/./src/service/localStorage.ts","webpack://free-task/./src/model/todo-item/todo-item.ts","webpack://free-task/./src/model/todo-list/todo-list.ts","webpack://free-task/./src/data/lists-data.ts","webpack://free-task/./src/index.ts"],"sourcesContent":["import { IItemData } from '../data/data-item-intarface';\r\nimport { ILocalStorgeKey } from '../data/localstorge-key-interface';\r\n\r\nclass LocalStorageService {\r\n    public keys: string[] = ['toDo', 'Done'];\r\n\r\n    constructor() { }\r\n\r\n    setData(key: string, value: IItemData[]): void {\r\n        if (value) {\r\n            localStorage.setItem(\r\n                key, JSON.stringify(value)\r\n            );\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n\r\n    getData(key: string): IItemData[] | null {\r\n        const data = localStorage.getItem(key);\r\n        return data\r\n            ? JSON.parse(data) :\r\n            null;\r\n    }\r\n\r\n    getAllKeys(): ILocalStorgeKey[] {\r\n        return this.keys.map(key => {\r\n            const listInfo: ILocalStorgeKey = {\r\n                name: key,\r\n                data: this.getData(key),\r\n            }\r\n            return listInfo;\r\n        });\r\n    }\r\n}\r\n\r\nexport { LocalStorageService }\r\n    ;","import { IItemData } from '../../data/data-item-intarface';\r\n\r\nclass TodoItem {\r\n    public item: HTMLLIElement;\r\n    public itemData: IItemData;\r\n    public onClick: (e: Event) => void;\r\n    public updatePerent: Function;\r\n\r\n    constructor(data: IItemData, updatePerentList: Function) {\r\n        this.item = document.createElement('li');\r\n        this.item.classList.add('list-item');\r\n        this.itemData = data;\r\n        this.item.textContent = this.itemData.content;\r\n        this.onClick = (e) => this.changeItemsPerentOnCkick(e);\r\n        this.updatePerent = updatePerentList;\r\n\r\n        this.item.addEventListener('click', this.onClick);\r\n    }\r\n\r\n    changeItemsPerentOnCkick(e: Event) {\r\n        this.item.classList.add('out');\r\n        setTimeout(() => {\r\n            this.destroy();\r\n            this.updatePerent(this.itemData);\r\n        }, 850);\r\n\r\n    }\r\n\r\n    destroy() {\r\n        this.item.removeEventListener('click', this.onClick);\r\n        this.item.remove();\r\n    }\r\n}\r\n\r\nexport { TodoItem }","import { LocalStorageService } from '../../service/localStorage';\r\nimport { TodoItem } from '../todo-item/todo-item';\r\nimport { IItemData } from '../../data/data-item-intarface';\r\n\r\nclass TodoList {\r\n    public wrapper: HTMLDivElement;\r\n    public title: HTMLHeadingElement;\r\n    public list: HTMLUListElement;\r\n\r\n    public listName: string;\r\n\r\n    public todoData: IItemData[];\r\n    public updateItemsInMain: Function;\r\n\r\n    public localStorage = new LocalStorageService();\r\n\r\n    constructor(perentNode: HTMLElement, listName: string, updateItemsBind: Function) {\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.classList.add('list-wrap');\r\n        this.listName = listName;\r\n        this.title = document.createElement('h3');\r\n        this.title.textContent = listName;\r\n        this.list = document.createElement('ul');\r\n        this.list.classList.add('list-wrap__list');\r\n        this.wrapper.append(this.title, this.list);\r\n        perentNode.append(this.wrapper);\r\n\r\n        this.todoData = this.localStorage.getData(listName);\r\n        this.updateItemsInMain = updateItemsBind;\r\n\r\n        this.createtodoList();\r\n    }\r\n\r\n    createtodoList(): void {\r\n        if (this.todoData) {\r\n            this.todoData.forEach((elData) => {\r\n                const itemComponent = new TodoItem(elData, this.updateListInfoInPerent.bind(this));\r\n                this.list.append(itemComponent.item);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    addItemInList(data: IItemData): void {\r\n        const itemData: IItemData = {\r\n            content: data.content,\r\n            id: data.id,\r\n            perentList: this.listName,\r\n        }\r\n        const itemComponent = new TodoItem(itemData, this.updateListInfoInPerent.bind(this));\r\n        this.list.append(itemComponent.item);\r\n        itemComponent.item.classList.add('in');\r\n        //в принципе, если использовать animation API, то иожно без сеттаймаута, там есть свойство animation end, тогда будет с Promise\r\n        setTimeout(() => itemComponent.item.classList.remove('in'), 820);\r\n    }\r\n\r\n    updateListInfoInPerent(itemData: IItemData) {\r\n        this.updateItemsInMain(itemData);\r\n    }\r\n}\r\n\r\nexport { TodoList }","import { IItemData } from './data-item-intarface';\r\n\r\nconst toDo: IItemData[] = [\r\n    {\r\n        content: 'shopping',\r\n        id: 0,\r\n        perentList: 'toDo',\r\n    },\r\n    {\r\n        content: 'visit to petsvet',\r\n        id: 1,\r\n        perentList: 'toDo',\r\n    },\r\n    {\r\n        content: 'visit to the doctor',\r\n        id: 2,\r\n        perentList: 'toDo',\r\n    },\r\n];\r\n\r\nconst done: IItemData[] = [\r\n    {\r\n        content: 'going to the cinema',\r\n        id: 3,\r\n        perentList: 'Done',\r\n    },\r\n    {\r\n        content: 'something else',\r\n        id: 4,\r\n        perentList: 'Done'\r\n    }\r\n];\r\n\r\nexport { toDo, done };","\"use strict\";\r\n\r\nimport './assets/style/style.scss';\r\nimport { TodoList } from './model/todo-list/todo-list';\r\nimport { toDo, done } from './data/lists-data';\r\nimport { LocalStorageService } from './service/localStorage';\r\nimport { IItemData } from './data/data-item-intarface';\r\nimport { ILocalStorgeKey } from './data/localstorge-key-interface';\r\n\r\nconst addDatatoLocalStorge = () => {\r\n    const localStorge = new LocalStorageService();\r\n    const toDoTitle = 'toDo';\r\n    const doneTitle = 'Done';\r\n    localStorge.setData(toDoTitle, toDo);\r\n    localStorge.setData(doneTitle, done);\r\n}\r\naddDatatoLocalStorge();\r\n\r\nclass PageModel {\r\n    public toDoTitle = 'toDo';\r\n    public doneTitle = 'Done';\r\n    public toDoList: TodoList;\r\n    public doneList: TodoList;\r\n\r\n    public body: HTMLElement;\r\n    public main: HTMLElement;\r\n    public wrapper: HTMLElement;\r\n\r\n    private _localStorge = new LocalStorageService();\r\n\r\n    constructor() {\r\n        this.body = document.querySelector('body');\r\n        this.main = document.createElement('main');\r\n        this.main.classList.add('page');\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.classList.add('wrapper');\r\n        this.body.append(this.wrapper);\r\n        this.wrapper.append(this.main);\r\n\r\n        this.toDoList = new TodoList(this.main, this.toDoTitle, this.updateItemsInList.bind(this));\r\n        this.doneList = new TodoList(this.main, this.doneTitle, this.updateItemsInList.bind(this));\r\n    }\r\n\r\n    updateItemsInList(itemData: IItemData) {\r\n        const currentperentList = itemData.perentList;\r\n        const newPerent = this.changePerent(currentperentList);\r\n        const curretDataList = this._localStorge.getData(currentperentList);\r\n\r\n        const updateDataRemoveItem = curretDataList.filter(el => el.id !== itemData.id);\r\n        this._localStorge.setData(currentperentList, updateDataRemoveItem);\r\n\r\n        itemData.perentList = newPerent;\r\n        const updateDataAddItem = this._localStorge.getData(newPerent);\r\n        updateDataAddItem.push(itemData);\r\n        this._localStorge.setData(newPerent, updateDataAddItem);\r\n\r\n        if (currentperentList == \"toDo\") {\r\n            this.doneList.addItemInList(itemData);\r\n        }\r\n        if (currentperentList === 'Done') {\r\n            this.toDoList.addItemInList(itemData);\r\n        }\r\n    }\r\n\r\n    changePerent(perentList: string): string {\r\n        return perentList === 'toDo' ? 'Done' : 'toDo';\r\n    }\r\n}\r\n\r\nconst page = () => new PageModel();\r\n\r\nwindow.addEventListener('load', page);"],"names":["LocalStorageService","constructor","keys","setData","key","value","localStorage","setItem","JSON","stringify","removeItem","getData","data","getItem","parse","getAllKeys","this","map","name","TodoItem","updatePerentList","item","document","createElement","classList","add","itemData","textContent","content","onClick","e","changeItemsPerentOnCkick","updatePerent","addEventListener","setTimeout","destroy","removeEventListener","remove","TodoList","perentNode","listName","updateItemsBind","wrapper","title","list","append","todoData","updateItemsInMain","createtodoList","forEach","elData","itemComponent","updateListInfoInPerent","bind","addItemInList","id","perentList","toDo","done","localStorge","addDatatoLocalStorge","PageModel","toDoTitle","doneTitle","_localStorge","body","querySelector","main","toDoList","updateItemsInList","doneList","currentperentList","newPerent","changePerent","updateDataRemoveItem","filter","el","updateDataAddItem","push","window"],"sourceRoot":""}